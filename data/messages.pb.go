// Code generated by protoc-gen-go.
// source: messages.proto
// DO NOT EDIT!

/*
Package data is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	ExperimentInfo
	GroupInfo
	VariableInfo
	Experiment
*/
package data

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Info holds general information about the experiment.
type ExperimentInfo struct {
	Id        string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SeedValue string  `protobuf:"bytes,2,opt,name=seed_value,json=seedValue" json:"seed_value,omitempty"`
	Size      float64 `protobuf:"fixed64,3,opt,name=size" json:"size,omitempty"`
}

func (m *ExperimentInfo) Reset()                    { *m = ExperimentInfo{} }
func (m *ExperimentInfo) String() string            { return proto.CompactTextString(m) }
func (*ExperimentInfo) ProtoMessage()               {}
func (*ExperimentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// GroupDescription specifies the size of the group and the value for the experiment variables.
type GroupInfo struct {
	InitialSize float64           `protobuf:"fixed64,1,opt,name=initial_size,json=initialSize" json:"initial_size,omitempty"`
	Variables   map[string]string `protobuf:"bytes,2,rep,name=variables" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *GroupInfo) Reset()                    { *m = GroupInfo{} }
func (m *GroupInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()               {}
func (*GroupInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GroupInfo) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type VariableInfo struct {
	Options []string `protobuf:"bytes,1,rep,name=options" json:"options,omitempty"`
}

func (m *VariableInfo) Reset()                    { *m = VariableInfo{} }
func (m *VariableInfo) String() string            { return proto.CompactTextString(m) }
func (*VariableInfo) ProtoMessage()               {}
func (*VariableInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Experiment struct {
	Info          *ExperimentInfo          `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	VariablesInfo map[string]*VariableInfo `protobuf:"bytes,2,rep,name=variables_info,json=variablesInfo" json:"variables_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	GroupsInfo    map[string]*GroupInfo    `protobuf:"bytes,3,rep,name=groups_info,json=groupsInfo" json:"groups_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Whitelist     map[string]string        `protobuf:"bytes,4,rep,name=whitelist" json:"whitelist,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Started       int64                    `protobuf:"varint,5,opt,name=started" json:"started,omitempty"`
	// We allow extensability for the experiment description.
	Details *google_protobuf.Any `protobuf:"bytes,6,opt,name=details" json:"details,omitempty"`
}

func (m *Experiment) Reset()                    { *m = Experiment{} }
func (m *Experiment) String() string            { return proto.CompactTextString(m) }
func (*Experiment) ProtoMessage()               {}
func (*Experiment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Experiment) GetInfo() *ExperimentInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Experiment) GetVariablesInfo() map[string]*VariableInfo {
	if m != nil {
		return m.VariablesInfo
	}
	return nil
}

func (m *Experiment) GetGroupsInfo() map[string]*GroupInfo {
	if m != nil {
		return m.GroupsInfo
	}
	return nil
}

func (m *Experiment) GetWhitelist() map[string]string {
	if m != nil {
		return m.Whitelist
	}
	return nil
}

func (m *Experiment) GetDetails() *google_protobuf.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

func init() {
	proto.RegisterType((*ExperimentInfo)(nil), "data.ExperimentInfo")
	proto.RegisterType((*GroupInfo)(nil), "data.GroupInfo")
	proto.RegisterType((*VariableInfo)(nil), "data.VariableInfo")
	proto.RegisterType((*Experiment)(nil), "data.Experiment")
}

var fileDescriptor0 = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x52, 0xcf, 0x0f, 0xd2, 0x30,
	0x18, 0xcd, 0xd8, 0x80, 0xec, 0x1b, 0x0e, 0xd3, 0x70, 0x98, 0x4b, 0x54, 0x9c, 0x31, 0xd9, 0x69,
	0x24, 0x78, 0x31, 0x06, 0x0f, 0x1c, 0x88, 0xd1, 0x83, 0x87, 0x61, 0xf0, 0x48, 0x4a, 0x56, 0x66,
	0xe3, 0x58, 0x97, 0xb5, 0xa0, 0xf3, 0x4f, 0xf2, 0xe8, 0x5f, 0x68, 0xd7, 0xfd, 0x60, 0x03, 0x2e,
	0xde, 0xda, 0xb7, 0xf7, 0xde, 0xbe, 0xf7, 0xfa, 0x81, 0x7d, 0x22, 0x9c, 0xe3, 0x98, 0xf0, 0x20,
	0xcb, 0x99, 0x60, 0xc8, 0x88, 0xb0, 0xc0, 0xee, 0xb3, 0x98, 0xb1, 0x38, 0x21, 0x0b, 0x85, 0x1d,
	0xce, 0xc7, 0x05, 0x4e, 0x8b, 0x8a, 0xe0, 0x6d, 0xc1, 0xde, 0xfc, 0xca, 0x48, 0x4e, 0x4f, 0x24,
	0x15, 0x9f, 0xd2, 0x23, 0x43, 0x36, 0x0c, 0x68, 0xe4, 0x68, 0x73, 0xcd, 0x37, 0x43, 0x79, 0x42,
	0xcf, 0x01, 0x38, 0x21, 0xd1, 0xfe, 0x82, 0x93, 0x33, 0x71, 0x06, 0x0a, 0x37, 0x4b, 0x64, 0x57,
	0x02, 0x08, 0x81, 0xc1, 0xe9, 0x6f, 0xe2, 0xe8, 0xf2, 0x83, 0x16, 0xaa, 0xb3, 0xf7, 0x47, 0x03,
	0xf3, 0x63, 0xce, 0xce, 0x99, 0x32, 0x7c, 0x05, 0x13, 0x9a, 0x52, 0x41, 0x71, 0xb2, 0x57, 0x4c,
	0x4d, 0x31, 0xad, 0x1a, 0xdb, 0x4a, 0x08, 0xad, 0xc0, 0xbc, 0xe0, 0x9c, 0xe2, 0x43, 0x42, 0xb8,
	0xfc, 0x85, 0xee, 0x5b, 0xcb, 0x17, 0x41, 0x39, 0x7a, 0xd0, 0xda, 0x04, 0xbb, 0x86, 0xb0, 0x49,
	0x45, 0x5e, 0x84, 0x57, 0x81, 0xbb, 0x02, 0xbb, 0xff, 0x11, 0x3d, 0x05, 0xfd, 0x07, 0x29, 0xea,
	0x10, 0xe5, 0x11, 0xcd, 0x60, 0xd8, 0x0d, 0x50, 0x5d, 0xde, 0x0f, 0xde, 0x69, 0x9e, 0x0f, 0x93,
	0x46, 0xad, 0xc6, 0x75, 0x60, 0xcc, 0x32, 0x41, 0x59, 0xca, 0xa5, 0x5e, 0x97, 0xdc, 0xe6, 0xea,
	0xfd, 0x35, 0x00, 0xae, 0x65, 0x21, 0x1f, 0x0c, 0x2a, 0x05, 0xea, 0x2f, 0xd6, 0x72, 0x56, 0xcd,
	0xdb, 0x2f, 0x33, 0x54, 0x0c, 0xf4, 0x19, 0xec, 0x76, 0xda, 0xbd, 0xd2, 0x54, 0x19, 0x5f, 0xdf,
	0x6a, 0xae, 0x21, 0x4b, 0x75, 0x15, 0xf4, 0xc9, 0xa5, 0x8b, 0xa1, 0x35, 0x58, 0x71, 0xd9, 0x49,
	0x6d, 0xa4, 0x2b, 0xa3, 0xf9, 0x9d, 0x91, 0xea, 0xad, 0xe3, 0x02, 0x71, 0x0b, 0xa0, 0x0f, 0x60,
	0xfe, 0xfc, 0x4e, 0x05, 0x49, 0x28, 0x17, 0x8e, 0xa1, 0x0c, 0x5e, 0xde, 0x19, 0x7c, 0x6b, 0x18,
	0x75, 0xdd, 0xad, 0xa2, 0x2c, 0x88, 0x0b, 0x9c, 0x0b, 0x12, 0x39, 0x43, 0x19, 0x5d, 0x0f, 0x9b,
	0x2b, 0x0a, 0x60, 0x1c, 0x11, 0x81, 0x69, 0xc2, 0x9d, 0x51, 0x5d, 0x4a, 0xb5, 0x79, 0x41, 0xb3,
	0x79, 0xc1, 0x3a, 0x2d, 0xc2, 0x86, 0xe4, 0x7e, 0x05, 0x74, 0x1f, 0xf8, 0xc1, 0xe3, 0xf9, 0xdd,
	0xc7, 0xb3, 0x96, 0xa8, 0x1a, 0xb6, 0xfb, 0x6a, 0x9d, 0x07, 0x75, 0xbf, 0xc0, 0xf4, 0x26, 0xfd,
	0x03, 0xcb, 0x37, 0x7d, 0xcb, 0xe9, 0xcd, 0xb6, 0x75, 0xfd, 0xe4, 0x7a, 0xf5, 0xcb, 0xf8, 0x9f,
	0xf5, 0x3a, 0x8c, 0x54, 0xf4, 0xb7, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x14, 0x67, 0xf0, 0x6b,
	0x9a, 0x03, 0x00, 0x00,
}
